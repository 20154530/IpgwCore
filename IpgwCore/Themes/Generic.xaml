<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:IpgwCore.Controls"
                    xmlns:dialogs="clr-namespace:IpgwCore.Controls.Dialogs"
                    xmlns:areawindow="clr-namespace:IpgwCore.Controls.AreaWindow"
                    xmlns:flowcontrols="clr-namespace:IpgwCore.Controls.FlowControls"
                    xmlns:local="clr-namespace:IpgwCore">

    <!--WindowBase-->

    <!--YT_TitleBar-->
    <Style TargetType="{x:Type areawindow:YT_TitleBar}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type areawindow:YT_TitleBar}">
                    <ContentPresenter x:Name="ContentPresenter"
                                      ContentSource="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--YT_SizeBorder-->
    <Style TargetType="{x:Type areawindow:YT_SizeBorder}">
        <Setter Property="BorderThickness"
                Value="{DynamicResource MainWindow_SizeBorder_Thickness}" />
        <Setter Property="BorderBrush"
                Value="#00000000" />
    </Style>

    <!--YT_Window-->
    <Style TargetType="{x:Type areawindow:YT_Window}">
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Width"
                Value="560" />
        <Setter Property="Height"
                Value="360" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type areawindow:YT_Window}">
                    <Border BorderBrush="{DynamicResource DefaultDialogs_Bc}"
                            BorderThickness="1"
                            Margin="2">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <AdornerDecorator x:Name="Content"
                                              Grid.Row="1">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </AdornerDecorator>
                            <areawindow:YT_TitleBar x:Name="TitleBar"
                                                    Content="{TemplateBinding TitleArea}" />
                            <areawindow:YT_SizeBorder Grid.Row="0"
                                                      Grid.RowSpan="2"
                                                      AttachedWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=areawindow:YT_Window}}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ExtendToTitleBar"
                                 Value="true">
                            <Setter TargetName="Content"
                                    Property="Grid.Row"
                                    Value="0" />
                            <Setter TargetName="Content"
                                    Property="Grid.RowSpan"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox-->
    <Style TargetType="controls:YT_TextBox">
        <Setter Property="TextWrapping"
                Value="NoWrap" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:YT_TextBox">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="RootGrid"
                              Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="False"
                                          Padding="{Binding ContentPadding,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          Margin="{Binding ContentMargin,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          Style="{DynamicResource SC_ScrollViewer}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <!--Dialogs-->

    <!--DialogBase-->
    <ControlTemplate x:Key="YT_GeneralDialog_Default"
                     TargetType="dialogs:YT_DialogBase">
        <Border x:Name="RootBorder"
                Width="{TemplateBinding ContentWidth}"
                Height="{TemplateBinding ContentHeight}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <Grid x:Name="RootGrid"
                  Background="{TemplateBinding Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid x:Name="TitleArea"
                      Height="{StaticResource Dialog_TileBar_Height}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <controls:YT_IconButton x:Name="CancleButton"
                                            Grid.Column="1"
                                            Content="&#xE711;"
                                            Visibility="{TemplateBinding CancelButtonVisibility}"
                                            Command="{TemplateBinding CancelCommand}" />
                </Grid>
                <AdornerDecorator x:Name="Content"
                                  Grid.Row="1">
                    <ContentPresenter />
                </AdornerDecorator>
                <controls:YT_IconButton x:Name="YesButton"
                                        Grid.Row="1"
                                        ContentText="是"
                                        Margin="0,0,68,8"
                                        Visibility="{TemplateBinding YseButtonVisibility}"
                                        Command="{TemplateBinding YesCommand}" />
                <controls:YT_IconButton x:Name="NoButton"
                                        Grid.Row="1"
                                        ContentText="否"
                                        Margin="0,0,8,8"
                                        Visibility="{TemplateBinding NoButtonVisibility}"
                                        Command="{TemplateBinding NoCommand}" />
            </Grid>
        </Border>
    </ControlTemplate>

    <!--YT_GeneralDialog-->
    <Style TargetType="dialogs:YT_GeneralDialog">
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="SizeToContent"
                Value="WidthAndHeight" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="Background"
                Value="{StaticResource MainWindow_BG}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultDialogs_Bc}" />
        <Setter Property="Template"
                Value="{StaticResource YT_GeneralDialog_Default}" />
    </Style>

    <!--YT_FormDialog-->
    <Style TargetType="dialogs:YT_FormDialog">
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="SizeToContent"
                Value="WidthAndHeight" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="Background"
                Value="{StaticResource MainWindow_BG}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultDialogs_Bc}" />
        <Setter Property="Template"
                Value="{StaticResource YT_GeneralDialog_Default}" />
    </Style>

    <!--YT_ColorPicker-->
    <Style TargetType="dialogs:YT_ColorPicker">
        <Setter Property="ResizeMode"
                Value="NoResize" />
        <Setter Property="SizeToContent"
                Value="WidthAndHeight" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="AllowsTransparency"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dialogs:YT_ColorPicker">
                    <Border Width="300"
                            Height="160"
                            Background="{DynamicResource MainWindow_Bg}"
                            BorderBrush="{DynamicResource DefaultDialogs_Bc}"
                            BorderThickness="1">
                        <Grid x:Name="RootGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="24" />
                            </Grid.RowDefinitions>
                            <Grid x:Name="TitleArea">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>
                                <controls:YT_IconButton x:Name="Close"
                                                        Command="{Binding CancelCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                        ForeToolTip="关闭"
                                                        ToolTipVisiblity="Visible"
                                                        Style="{StaticResource CloseButton}"
                                                        Grid.Column="2" />
                            </Grid>
                            <Grid x:Name="ContentArea"
                                  Margin="8,6,12,0"
                                  VerticalAlignment="Top"
                                  Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="72" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>
                                <Rectangle x:Name="ColorID"
                                           Width="52"
                                           Height="52"
                                           HorizontalAlignment="Left"
                                           Margin="6,0,0,0"
                                           StrokeThickness="1"
                                           Stroke="{DynamicResource ColorPickerLabel}"
                                           Fill="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Converter={StaticResource ColorNumConv},ConverterParameter=Brush }" />
                                <Grid Grid.Column="1"
                                      Height="50">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="R"
                                          Grid.Row="0"
                                          VerticalAlignment="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Padding="0,0,0,10"
                                                   Text="R" />
                                        <Slider Grid.Column="1"
                                                Margin="4,0,0,0"
                                                VerticalAlignment="Top"
                                                Value="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=R}"
                                                Style="{StaticResource ColorPickerSlider}" />
                                    </Grid>
                                    <Grid x:Name="G"
                                          Grid.Row="1"
                                          VerticalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Padding="0,0,0,4"
                                                   Text="G" />
                                        <Slider Grid.Column="1"
                                                Margin="4,0,0,0"
                                                VerticalAlignment="Center"
                                                Value="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=G}"
                                                Style="{StaticResource ColorPickerSlider}" />
                                    </Grid>
                                    <Grid x:Name="B"
                                          Grid.Row="2"
                                          VerticalAlignment="Bottom">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="12" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Padding="0,4,0,0"
                                                   Text="B" />
                                        <Slider Grid.Column="1"
                                                VerticalAlignment="Bottom"
                                                Margin="4,0,0,0"
                                                Value="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=B}"
                                                Style="{StaticResource ColorPickerSlider}" />
                                    </Grid>
                                </Grid>
                                <Grid x:Name="A"
                                      Grid.ColumnSpan="2"
                                      Grid.Row="1"
                                      Margin="6,8,0,0"
                                      Height="16">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="12" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{StaticResource ColorSliderLabel}"
                                               Padding="0,0,0,4"
                                               Text="A" />
                                    <Slider Grid.Column="1"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            Value="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=A}"
                                            Style="{StaticResource ColorPickerSlider}" />
                                </Grid>
                                <Grid x:Name="EditBlocks"
                                      Grid.Row="2"
                                      Margin="6,2,0,0"
                                      Height="20"
                                      Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0"
                                                Margin="0,0,8,0"
                                                Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Text="HEX " />
                                        <controls:YT_TextBox Style="{StaticResource ColorSliderValue}"
                                                             Width="64"
                                                             Text="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=HEX,UpdateSourceTrigger=PropertyChanged}" />

                                    </StackPanel>
                                    <StackPanel Grid.Column="1"
                                                Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Text="A " />
                                        <controls:YT_TextBox Style="{StaticResource ColorSliderValue}"
                                                             Text="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=AS,UpdateSourceTrigger=PropertyChanged}" />

                                    </StackPanel>
                                    <StackPanel Grid.Column="2"
                                                Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Text="R " />
                                        <controls:YT_TextBox Style="{StaticResource ColorSliderValue}"
                                                             Text="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=RS,UpdateSourceTrigger=PropertyChanged}" />

                                    </StackPanel>
                                    <StackPanel Grid.Column="3"
                                                Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Text="G " />
                                        <controls:YT_TextBox Style="{StaticResource ColorSliderValue}"
                                                             Text="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=GS,UpdateSourceTrigger=PropertyChanged}" />

                                    </StackPanel>
                                    <StackPanel Grid.Column="4"
                                                Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource ColorSliderLabel}"
                                                   Text="B " />
                                        <controls:YT_TextBox Style="{StaticResource ColorSliderValue}"
                                                             Text="{Binding Argb, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay,Converter={StaticResource ColorNumConv},ConverterParameter=BS,UpdateSourceTrigger=PropertyChanged}" />

                                    </StackPanel>
                                </Grid>
                            </Grid>
                            <Grid x:Name="FootArea"
                                  Grid.Row="2">
                                <controls:YT_IconButton x:Name="Submit"
                                                        ForeToolTip="选取当前颜色"
                                                        ContentText="确定"
                                                        Style="{StaticResource TextButton}"
                                                        Command="{Binding YesCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--IconButtons-->

    <!--IconButton-->
    <Style TargetType="{x:Type controls:YT_IconButton}">
        <Setter Property="FontWeight"
                Value="Light" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="ToolTipVisiblity"
                Value="Collapsed" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <ToolTip Style="{DynamicResource DefaultToolTip}"
                         Visibility="{Binding ToolTipVisiblity}">
                    <Grid Background="{DynamicResource DefaultToolTip_Bg}">
                        <TextBlock Text="{Binding ForeToolTip}"
                                   Style="{DynamicResource DefaultToolTipText}" />
                    </Grid>
                </ToolTip>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:YT_IconButton}">
                    <Border x:Name="RootBorder"
                            SnapsToDevicePixels="True">
                        <Grid x:Name="RootGrid"
                              Margin="{TemplateBinding Padding}"
                              Background="{TemplateBinding IconMaskN}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="ContentIcon"
                                       Text="{TemplateBinding Content}"
                                       FontFamily="{DynamicResource Segoe}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding IconVisiblity}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       RenderTransformOrigin=".5 .5">
                                <TextBlock.RenderTransform>
                                    <RotateTransform x:Name="ContentIconRotateTransform" />
                                </TextBlock.RenderTransform>
                            </TextBlock>
                            <TextBlock x:Name="ContentTexts"
                                       Grid.Column="1"
                                       HorizontalAlignment="{TemplateBinding ContentHorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding ContentVerticalAlignment}"
                                       TextAlignment="{TemplateBinding ContentTextAlignment}"
                                       Margin="{TemplateBinding LabelPadding}"
                                       Text="{TemplateBinding ContentText}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontSize="{TemplateBinding ContentTextFontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding ContentTextVisiblity}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="AllowAni"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentTexts"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentIconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="-90"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentIconRotateTransform"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="0"
                                                         Duration="0:0:0.3" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="AllowAni"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentTexts"
                                        Property="Foreground"
                                        Value="{Binding IconR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentTexts"
                                    Property="Foreground"
                                    Value="{Binding IconP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskP,RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="Textloc"
                                 Value="True">
                            <Setter TargetName="ContentTexts"
                                    Property="Grid.Column"
                                    Value="0" />
                            <Setter TargetName="ContentIcon"
                                    Property="Grid.Column"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconToggelButton-->
    <Style TargetType="{x:Type controls:YT_IconToggelButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource DefaultToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_Bg}">
                                <TextBlock Text="{Binding BackToolTip}"
                                           Style="{DynamicResource DefaultToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource DefaultToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_Bg}">
                                <TextBlock Text="{Binding ForeToolTip}"
                                           Style="{DynamicResource DefaultToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:YT_IconToggelButton}">
                    <Border x:Name="RootBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding IconMaskN}">
                        <Grid x:Name="RootGrid"
                              Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="ContentIcon"
                                       Grid.Column="1"
                                       Style="{DynamicResource IconTextBlock}"
                                       Text="{TemplateBinding ForeIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding IconVisiblity}"
                                       RenderTransformOrigin=".5 .5"
                                       RenderTransform="{TemplateBinding IconRotate}" />
                            <TextBlock x:Name="Label"
                                       HorizontalAlignment="{TemplateBinding ContentHorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding ContentVerticalAlignment}"
                                       TextAlignment="{TemplateBinding ContentTextAlignment}"
                                       Margin="{TemplateBinding LabelPadding}"
                                       Text="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding LabelFontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding LabelVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Textloc"
                                 Value="True">
                            <Setter TargetName="Label"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ContentIcon"
                                    Property="Grid.Column"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding BackIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Label"
                                    Property="Text"
                                    Value="{Binding BackText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskS, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconS, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsMouseOver"
                                            Value="True" />
                                <Condition  Property="IsChecked"
                                            Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconRadioButton-->
    <Style TargetType="{x:Type controls:YT_IconRadioButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource DefaultToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_Bg}">
                                <TextBlock Text="{Binding BackToolTip}"
                                           Style="{DynamicResource DefaultToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <ToolTip Style="{DynamicResource DefaultToolTip}"
                                 Visibility="{Binding ToolTipVisiblity}">
                            <Grid Background="{DynamicResource DefaultToolTip_Bg}">
                                <TextBlock Text="{Binding ForeToolTip}"
                                           Style="{DynamicResource DefaultToolTipText}" />
                            </Grid>
                        </ToolTip>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:YT_IconRadioButton}">
                    <Border x:Name="RootBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding IconMaskN}">
                        <Grid x:Name="RootGrid"
                              Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="ContentIcon"
                                       Grid.Column="1"
                                       Style="{DynamicResource IconTextBlock}"
                                       Text="{TemplateBinding ForeIcon}"
                                       FontSize="{TemplateBinding FontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding IconVisiblity}"
                                       SnapsToDevicePixels="True" />
                            <TextBlock x:Name="Label"
                                       HorizontalAlignment="{TemplateBinding ContentHorizontalAlignment}"
                                       VerticalAlignment="{TemplateBinding ContentVerticalAlignment}"
                                       TextAlignment="{TemplateBinding ContentTextAlignment}"
                                       Margin="{TemplateBinding LabelPadding}"
                                       Text="{TemplateBinding Content}"
                                       FontSize="{TemplateBinding LabelFontSize}"
                                       Foreground="{TemplateBinding IconN}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       Visibility="{TemplateBinding LabelVisibility}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Textloc"
                                 Value="True">
                            <Setter TargetName="Label"
                                    Property="Grid.Column"
                                    Value="1" />
                            <Setter TargetName="ContentIcon"
                                    Property="Grid.Column"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding BackIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskS, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconS, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Label"
                                    Property="Foreground"
                                    Value="{Binding IconS, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="RootBorder"
                                    Property="Background"
                                    Value="{Binding IconMaskP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="ContentIcon"
                                    Property="Foreground"
                                    Value="{Binding IconP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Label"
                                    Property="Foreground"
                                    Value="{Binding IconP, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="ContentIcon"
                                    Property="Text"
                                    Value="{Binding DisIcon, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition  Property="IsMouseOver"
                                            Value="True" />
                                <Condition  Property="IsChecked"
                                            Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="RootBorder"
                                        Property="Background"
                                        Value="{Binding IconMaskR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="ContentIcon"
                                        Property="Foreground"
                                        Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                <Setter TargetName="Label"
                                        Property="Foreground"
                                        Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled"
                                           Value="false" />
                                <Condition Property="IsChecked"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ContentIcon"
                                        Property="Text"
                                        Value="{Binding DisIconBack, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--ContextMenu-->

    <!--DContextMenu-->
    <Style TargetType="{x:Type flowcontrols:YT_ContextMenu}">
        <Setter Property="Background"
                Value="{DynamicResource ContextMenu_Bg}" />
        <Setter Property="Padding"
                Value="-1" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type flowcontrols:YT_ContextMenu}">
                    <Border x:Name="RootBorder"
                            BorderThickness="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="{TemplateBinding Padding}">
                        <Grid Background="{TemplateBinding Background}">
                            <ItemsPresenter x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DMenuItem-->
    <Style TargetType="{x:Type flowcontrols:YT_MenuItem}">
        <Setter Property="FontWeight"
                Value="Light" />
        <Setter Property="Background"
                Value="{DynamicResource ContextMenu_Bg}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ContextMenu_Fg}" />
        <Setter Property="IconN"
                Value="{DynamicResource ContextMenuItem_Fg}" />
        <Setter Property="IconR"
                Value="{DynamicResource ContextMenuItem_Fg_R}" />
        <Setter Property="IconMaskN"
                Value="{DynamicResource ContextMenuItem_Bg}" />
        <Setter Property="IconMaskR"
                Value="{DynamicResource ContextMenuItem_Bg_R}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="IconSize"
                Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type flowcontrols:YT_MenuItem}">
                    <Grid x:Name="RootGrid"
                          Height="{TemplateBinding Height}"
                          Background="{TemplateBinding Background}"
                          MinWidth="{TemplateBinding MinWidth}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="Mask"
                                   Margin="2"
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding IconMaskN}" />
                        <TextBlock x:Name="Icon"
                                   Width="{TemplateBinding IconWidth}"
                                   FontFamily="{DynamicResource Segoe}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   TextAlignment="{TemplateBinding IconAlignment}"
                                   Text="{TemplateBinding HeadIcon}"
                                   Foreground="{TemplateBinding IconN}"
                                   FontSize="{TemplateBinding IconSize}"
                                   FontWeight="{TemplateBinding FontWeight}"/>
                        <TextBlock x:Name="Content"
                                   Grid.Column="1"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   TextAlignment="{TemplateBinding ContentTextAlignment}"
                                   Text="{TemplateBinding ContentText}"
                                   Foreground="{TemplateBinding IconN}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Mask"
                                    Property="Fill"
                                    Value="{Binding IconMaskR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Icon"
                                    Property="Foreground"
                                    Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                            <Setter TargetName="Content"
                                    Property="Foreground"
                                    Value="{Binding IconR, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
